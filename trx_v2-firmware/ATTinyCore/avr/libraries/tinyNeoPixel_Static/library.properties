name=tinyNeoPixel Static
version=1.5.0
author=Adafruit (extensively modified by Spence Konde)
maintainer=Spence Konde <spencekonde@gmail.com>
sentence=Arduino library for controlling single-wire-based LED pixels and strip for ATtinyCore, megaTinyCore, and DxCore. 1.5.x is the classic AVR version, distributed starting with ATTinyCore 2.0.0
paragraph=This library is closely based on the original Adafruit_NeoPixel library, however additional clock speeds have been given support. The Static version is optimized for improved flash efficiency and better visibility of memory usage by eliminating use of malloc() and free(). This requires the user code to declare a appropriate frame buffer and pass it to the constructor, but saves over 1k of flash and causes avr-size to include the memory used by that frame buffer when the % of ram used is shown - in the original and in tinyNeoPixel, because it was allocated dynamically, that was not possible, and it was not uncommon to see people complaining or asking for help when the cause of their problem was the frame buffer for the neopixels they were controlling would have had to be larger than the total RAM that the part has. In the normal version, malloc() would fail, causing the begin() method to fail <i>at runtime only</i>, and the user to be left with not a clue as to what had gone wrong. The result was considerable confusion when trying to debug these sort of issues (when, at compile-time, it is trivial to figure out whether the code has a prayer of working. Additionally, in the name of reducing flash use, he call to pinMode has been removed from the _Static version. The dependence of the assembly on the OUT instruction and hence on having multiple copies of the routines to cover all ports has been eliminated. Errors in the length of LOWs are only 1 clock cycle, and only on some bits in each byte, and the output should remain well within spec.
category=Display
url=https://github.com/SpenceKonde/ATTinyCore
architectures=avr
